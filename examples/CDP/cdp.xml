<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE token  [
        <!ENTITY style SYSTEM "../shared.css">
        <!ENTITY dai-bridge.en SYSTEM "cdp.en.shtml">
        ]>
<ts:token xmlns:ts="http://tokenscript.org/2019/05/tokenscript"
          xmlns="http://www.w3.org/1999/xhtml"
          xmlns:xml="http://www.w3.org/XML/1998/namespace"
          xsi:schemaLocation="http://tokenscript.org/2019/05/tokenscript ../../schema/tokenscript.xsd"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          custodian="false"
>
    <ts:name>
        <ts:plurals xml:lang="en">
            <ts:string quantity="one">Token</ts:string>
            <ts:string quantity="other">Tokens</ts:string>
        </ts:plurals>
        <ts:plurals xml:lang="es">
            <ts:string quantity="one">simbólico</ts:string>
            <ts:string quantity="other">Tokens</ts:string>
        </ts:plurals>
        <ts:string xml:lang="zh">代币</ts:string>
    </ts:name>
    <ts:contract name="DAIToken" interface="erc20">
        <ts:address network="1">0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359</ts:address>
    </ts:contract>
    <ts:contract name="DSProxy">
        <ts:address network="1">0x12d20B3eF56a92F675b3A49D1Ed6aBE708CA3758</ts:address>
    </ts:contract>
    <ts:contract name="Medianizer">
        <ts:address network="1">0x729D19f657BD0614b4985Cf1D82531c67569197B</ts:address>
    </ts:contract>
    <ts:contract name="SaiTub">
        <ts:address network="1">0x448a5065aeBB8E423F0896E6c5D525C040f59af3</ts:address>
    </ts:contract>
    <ts:origins>
        <!-- Define the contract which holds the token that the user will use -->
        <ts:ethereum contract="DAIToken">
        </ts:ethereum>
    </ts:origins>
    <ts:selections>
        <ts:selection id="expired">
            <ts:name>
                <ts:plurals xml:lang="en">
                    <ts:string quantity="one">Expired Token</ts:string>
                    <ts:string quantity="other">Expired Tokens</ts:string>
                </ts:plurals>
                <ts:string xml:lang="zh">过期的代币</ts:string>
            </ts:name>
            <ts:filter>expired</ts:filter>
        </ts:selection>
    </ts:selections>
    <ts:cards>
        <ts:token-card>
            <style type="text/css">&style;</style>
            <ts:view-iconified xml:lang="en">
            </ts:view-iconified>
            <ts:view xml:lang="en">
                &dai-bridge.en;
            </ts:view>
        </ts:token-card>
    </ts:cards>
    <ts:attribute-types>
        <!-- Get the USD price of Ether from the Maker Oracle -->
        <ts:attribute-type id="ethPriceUSD" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">EthPriceUSD</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="read" contract="Medianizer" as="uint">
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <!-- TODO Get the amount deposited, amount generated,
         amount withdraw-able (in eth and DAI) & amount to pay back -->

        <!-- tuple below returns
            struct Cup {
                address  lad;      // CDP owner
                uint256  ink;      // Locked collateral (in SKR)
                uint256  art;      // Outstanding normalised debt (tax only)
                uint256  ire;      // Outstanding normalised debt
            }
        -->
        <ts:attribute-type id="cups" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">CDP Debt and Collateral</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="cups" contract="SaiTub" as="tuple">
                    <ts:data>
                        <ts:bytes32 ref="cupData"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="stabilityFee" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Stability Fee</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="fee" contract="DAIToken" as="uint">
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="balance" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Balance</ts:string>
                <ts:string xml:lang="zh">餘額</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="balanceOf" contract="DAIToken" as="uint">
                    <ts:data>
                        <ts:uint256 ref="ownerAddress"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <!-- TODO all these functions like move, close, deposit, generate,
        payback might need to go through the proxy -->
        <ts:attribute-type id="deposit" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Deposit</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="lock" contract="DSProxy">
                    <ts:data>
                        <ts:address ref="address"/>
                        <ts:bytes32 ref="data"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="withdraw" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Withdraw</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="free" contract="DSProxy">
                    <ts:data>
                        <ts:address ref="address"/>
                        <ts:bytes32 ref="data"/>
                        <ts:uint256 ref="amount"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="payback" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Payback</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="burn" contract="SaiTub">
                    <ts:data>
                        <ts:uint256 ref="wad"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="generate" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Generate</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="mint" contract="SaiTub">
                    <ts:data>
                        <ts:address ref="guy"/>
                        <ts:uint256 ref="wad"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="move" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Move</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="give" contract="SaiTub">
                    <ts:data>
                        <ts:bytes32 ref="cup"/>
                        <ts:address ref="to"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="close" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Close</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="shut" contract="SaiTub">
                    <ts:data>
                        <ts:bytes32 ref="cup"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

        <ts:attribute-type id="safe" syntax="1.3.6.1.4.1.1466.115.121.1.36">
            <ts:name>
                <ts:string xml:lang="en">Is CDP safe?</ts:string>
            </ts:name>
            <ts:origins>
                <ts:ethereum function="safe" contract="SaiTub" as="bool">
                    <ts:data>
                        <ts:bytes32 ref="cup"/>
                    </ts:data>
                </ts:ethereum>
            </ts:origins>
        </ts:attribute-type>

    </ts:attribute-types>
</ts:token>


<script type="text/javascript"><![CDATA[
class Token {

    constructor(tokenInstance) {
        this.props = tokenInstance;
    }

    render() {
        const decimals18 = 1000000000000000000;
        const decimals8 = 100000000; //cToken decimals
        const blocksPerYearEstimate = 2103795;
        let balance = (this.props.tokenBalance / decimals18).toFixed(2);
        let cTokenBalance = (this.props.cTokenBalance / decimals8).toFixed(2);
        let borrowBalance = (this.props.borrowBalanceWithInterest / decimals8).toFixed(2);
        let interestRateOnSupply = ((this.props.supplyInterestRate / decimals18) * blocksPerYearEstimate).toFixed(2);
        let interestRateBorrow = (this.props.borrowInterestRate / decimals18).toFixed(2);
        let interestEarned = ((this.props.cTokenBalanceWithInterest - this.props.cTokenBalance) / decimals18).toFixed(2);
        let interestPayable = ((this.props.borrowBalanceWithInterest - this.props.borrowBalanceWithoutInterest) / decimals8).toFixed(2);

        return`
  <div id="border-container">
    <h2 class="ui header block">
    <bold>${this.props.name} Overview</bold>
    </h2>
    <class="ui container">
        <div class="ui grid">
          <div class="left floated six wide column">
            <h4>${this.props.name.replace("cToken ", "")} Balance</h4>
          </div>
          <div class="right floated three wide column">
            <h4>${balance}</h4>
          </div>
        </div>
        <div class="ui grid">
          <div class="floated left six wide column">
            <h4>
            Supply Balance
            </h4>
          </div>
          <div class="right floated three wide column">
            <h4>${cTokenBalance}
            </h4>
          </div>
        </div>
        <div class="ui grid">
          <div class="left floated seven wide column">
            <h4>
            Borrow Balance
            </h4>
          </div>
          <div class="right floated three wide column">
            <h4>${borrowBalance}
            </h4>
          </div>
        </div>
      </div>
      <div class="ui teal inverted segment">
        <div class="ui grid">
          <div class="left floated nine wide column">
            <h4>
            Interest Rate on Supply
            </h4>
          </div>
          <div class="right floated three wide column">
            <h4>${interestRateOnSupply}</h4>
          </div>
        </div>
        <div class="ui grid">
          <div class="left floated nine wide column">
            <h4>
            Interest Rate on Borrow
            </h4>
          </div>
          <div class="right floated three wide column">
            <h4>${interestRateBorrow}
            </h4>
          </div>
        </div>
        <div class="ui grid">
          <div class="left floated nine wide column">
            <h4>
            Interest Earned
            </h4>
          </div>
          <div class="right floated three wide column">
            <h4>${interestEarned}</h4>
          </div>
        </div>
        <div class="ui grid">
          <div class="left floated nine wide column">
            <h4>
            Interest Payable
            </h4>
          </div>
          <div class="right floated three wide column">
            <h4>${interestPayable}
            </h4>
          </div>
        </div>
      </div>
  </div>
`;
    }
}

web3.tokens.dataChanged = (oldTokens, updatedTokens) => {
    const currentTokenInstance = web3.tokens.data.currentInstance;
    const domHtml = new Token(currentTokenInstance).render();
    document.getElementById('root').innerHTML = domHtml;
    if (currentTokenInstance.balance != null) {
        document.getElementById('cTokenBalance').innerHTML = currentTokenInstance.balance / 1e+18;
    }
};

]]></script>
<div id="root"></div>
